# kong deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: apigw-kong
  name: apigw-kong
  namespace: mep
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apigw-kong
  template:
    metadata:
      labels:
        app: apigw-kong
    spec:
      initContainers:
        - name: check-db-ready
          image: postgres:9.6
          command: ['sh', '-c', 'until pg_isready -h postgres-db -p 5432; do echo waiting for database; sleep 2; done;']
      containers:
        - name: kong-proxy
          image: kong:1.5.1-alpine
          env:
            - name: KONG_DATABASE
              value: "postgres"
            - name: KONG_NGINX_WORKER_PROCESSES
              value: "1"
            # - name: KONG_NGINX_HTTP_INCLUDE
            #   value: /kong/servers.conf
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_LISTEN
              value: 127.0.0.1:8444 ssl
            - name: KONG_PROXY_LISTEN
              value: 0.0.0.0:8000, 0.0.0.0:8443 ssl http2
            - name: KONG_ADMIN_LISTEN
              value: 0.0.0.0:8001
            - name: KONG_PG_DATABASE
              value: kong
            - name: KONG_PG_HOST
              value: postgres-db
            - name: KONG_PG_USER
              value: kong
            - name: KONG_PG_PASSWORD
              value: kong
            # - name: KONG_PG_PASSWORD_FILE
            #   value: /run/secrets/kong_postgres_password
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
          # - name: KONG_SSL_CERT
          #   value: /run/secrets/kong.crt
          # - name: KONG_SSL_CERT_KEY
          #   value: /run/secrets/kong.key

          # livenessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /health
          #     port: 9001
          #     scheme: HTTP
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 1
          ports:
            - containerPort: 8000
              name: proxy
              protocol: TCP
            - containerPort: 8443
              name: proxy-ssl
              protocol: TCP
            - containerPort: 8001
              name: admin-api
              protocol: TCP
            - containerPort: 8444
              name: admin-api-ssl
              protocol: TCP
          # readinessProbe:
          #   failureThreshold: 3
          #   httpGet:
          #     path: /health
          #     port: 9001
          #     scheme: HTTP
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   successThreshold: 1
          #   timeoutSeconds: 1
          # securityContext:
          #   runAsUser: 1000
          # volumeMounts:
          # - mountPath: /kong
          #   name: kong-server-blocks
          volumeMounts:
            - name: kongssl
              mountPath: "/run/kongssl"
              readOnly: true
      volumes:
        - name: kongssl
          secret:
            secretName: kongssl-secret
# postgres database
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db
  namespace: mep
  labels:
    app: postgres-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pv-claim
      containers:
        - name: postgres-db
          image: postgres:9.6
          imagePullPolicy: "IfNotPresent"
          env:
            - name: POSTGRES_DB
              value: kong
            - name: POSTGRES_USER
              value: kong
            - name: POSTGRES_PASSWORD
              value: kong
          # - name: POSTGRES_PASSWORD_FILE
          #   value: /run/secrets/kong_postgres_password
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
          ports:
            - containerPort: 5432
