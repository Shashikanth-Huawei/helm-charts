apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-mgmt
  namespace: default
  labels:
    app: user-mgmt
spec:
  selector:
    matchLabels:
      app: user-mgmt
  replicas: 1
  template:
    metadata:
      labels:
        app: user-mgmt
    spec:
      initContainers:
        - name: init-service-center
          image: busybox:1.28.3
          command: ['sh', '-c', "until nslookup service-center; do echo waiting for service-center; sleep 2; done"]
        - name: init-postgres
          image: busybox:1.28.3
          command: ['sh', '-c', "until nslookup user-mgmt-postgres-svc; do echo waiting for postgres; sleep 2; done"]
        - name: init-redis
          image: busybox:1.28.3
          command: ['sh', '-c', "until nslookup user-mgmt-redis-svc; do echo waiting for redis; sleep 2; done"]
      containers:
        - name: user-mgmt
          image: {{ .Values.images.repository }}:{{ .Values.images.tag }}
          imagePullPolicy: {{ .Values.images.pullPolicy }}
          ports:
            - containerPort: 8067
          env:
            - name: LOG_DIR
              value: /var/log/usermgmt
            - name: CORS_ALLOW_ORIGINS
              value: {{ quote .Values.cors.allow_origins }}
            - name: SC_ADDRESS
              value: http://service-center:30100
            - name: POSTGRES_IP
              value: user-mgmt-postgres-svc
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_DB_NAME
              value: {{ .Values.postgres.dbname }}
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: postgresUsername
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: postgresPassword
            - name: REDIS_IP
              value: user-mgmt-redis-svc
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_TIMEOUT
              value: {{ quote .Values.redis.timeout }}
            - name: REDIS_VERIFICATION_TIMEOUT
              value: {{ quote .Values.redis.verification_timeout }}
            - name: REDIS_MAX_TOTAL
              value: {{ quote .Values.redis.max_total }}
            - name: REDIS_MAX_IDLE
              value: {{ quote .Values.redis.max_idle }}
            - name: REDIS_MAX_WAIT_MILLIS
              value: {{ quote .Values.redis.max_wait_millis }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: redisPassword
            - name: SMS_ENABLED
              value: {{ quote .Values.sms.enabled }}
            {{- if .Values.sms.enabled }}
            - name: SMS_URL
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: smsUrl
            - name: SMS_APP_KEY
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: smsAppKey
            - name: SMS_APP_SECRET
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: smsAppSecret
            - name: SMS_SENDER
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: smsSender
            - name: SMS_TEMPLATE_ID
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: smsTemplateId
            - name: SMS_APP_SIGNATURE
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-secret
                  key: smsAppSignature
            - name: SMS_STATUS_CALL_BACK
              valueFrom:
                 secretKeyRef:
                  name: user-mgmt-secret
                  key: smsStatusCallBack
            {{- end }}
            - name: JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-jwt-secret
                  key: publicKey
            - name: JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: user-mgmt-jwt-secret
                  key: privateKey
          {{- if .Values.persistence.enabled }}
          volumeMounts:
            - mountPath: /var/log/usermgmt
              name: usermgmt-log
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
        - name: usermgmt-log
          hostPath:
            path: /edgegallery_datas/usermgmt/log
      {{- end }}